Metadata-Version: 2.1
Name: djangoadmin
Version: 2.2.8
Summary: Djangoadmin: Django Reusable Admin Application.
Home-page: https://github.com/bhojrampawar/djangoadmin
Author: Bhojram pawar
Author-email: bhojrampawar@hotmail.com
License: MIT
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Description-Content-Type: text/markdown
Requires-Dist: django
Requires-Dist: djangorestframework
Requires-Dist: pillow
Requires-Dist: djangorestframework-simplejwt
Requires-Dist: django-crispy-forms
Requires-Dist: django-filter
Requires-Dist: djangotools

## Djangoadmin : Django Reusable Admin Application.

**Djangoadmin** is a **Reusable Django app** which provides admin featured like signup, login, profile, change password, reset password by email, send email, and many more. The Djangoadmin's extended Model is rich features and powerful enough, You can start with Djangoadmin without installation of any 3rd party packages.
___


## Installation :
You can install **Djangoadmin** from PyPI using **pip**.

``` pip install djangoadmin ```
___


## Configuration :
***1. Open the ```settings.py``` module of your project, And put djangoadmin into ```INSTALLED_APPS```.***
```python
INSTALLED_APPS = (
    ...
    'djangoadmin',
    ...
)
```

***2. Open the ```urls.py``` module of your project, And include djangoadmin URLs.***
```python
urlpatterns = [
    ...
    re_path(r'^djangoadmin/', include('djangoadmin.urls')),
    ...
]
```

***3. Setup the Templates for djangoadmin.***
>> ***Important Note***: Djangoadmin App is a part of Djangoengine project. And if you want to access UI part of Djangoadmin App, You need to configure some Reusable/global templates to your django project or you can create your own templates, It's very easy.
```python
TEMPLATES = [
    ...
    ...
    'DIRS': [os.path.join(BASE_DIR, 'templates'),],
    ...
    ...
]
```

Create the ```templates``` folder inside ```BASE_DIR``` and Then create ```djangoadmin``` folders inside the templates folder.
Then [download](https://www.dropbox.com/sh/na4tzfewub5mhe5/AABmyPHZ3KFZSpC7lH9Uvl5Ya?dl=0) the djangoadmin templates and put them inside the ```djangoadmin``` folder.

***4. Static files configuration.***
Open your ```settings.py``` module and Configure Static files and media files or you can can use your own configuration.
```python
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static-local'),)
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'static-root', 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'static-root', 'media')
```

Create the ```static-local``` folder inside ```BASE_DIR```, Then create ```djangoadmin``` folders inside that ```static-local``` folder.
And also [download](https://www.dropbox.com/sh/1jjul5c7kauas3o/AACeEf_OqpnzTe_iqK-r3SNMa?dl=0) the djangoadmin static files and put them inside the ```djangoadmin``` folder.
___


## Complete the Djangoadmin setup by running the following command one by one in the sequence.
```python
python manage.py makemigrations djangoadmin
python manage.py migrate djangoadmin
python manage.py collectstatic
python manage.py runserver
```

